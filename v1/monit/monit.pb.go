// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v4.25.1
// source: v1/monit/monit.proto

package monit

import (
	base "github.com/zj-sh/meta/v1/base"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 机器信息
type Machine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MachineId   string `protobuf:"bytes,1,opt,name=machine_id,json=machineId,proto3" json:"machine_id,omitempty"`
	MachineName string `protobuf:"bytes,2,opt,name=machine_name,json=machineName,proto3" json:"machine_name,omitempty"`
}

func (x *Machine) Reset() {
	*x = Machine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_monit_monit_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Machine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine) ProtoMessage() {}

func (x *Machine) ProtoReflect() protoreflect.Message {
	mi := &file_v1_monit_monit_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Machine.ProtoReflect.Descriptor instead.
func (*Machine) Descriptor() ([]byte, []int) {
	return file_v1_monit_monit_proto_rawDescGZIP(), []int{0}
}

func (x *Machine) GetMachineId() string {
	if x != nil {
		return x.MachineId
	}
	return ""
}

func (x *Machine) GetMachineName() string {
	if x != nil {
		return x.MachineName
	}
	return ""
}

// SSH执行
type SSHExecParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Machine *Machine `protobuf:"bytes,1,opt,name=machine,proto3" json:"machine,omitempty"`
	Command string   `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`          // 执行脚本的command，值有 bash shell 等
	Cwd     string   `protobuf:"bytes,3,opt,name=cwd,proto3" json:"cwd,omitempty"`                  // 执行脚本的工作目录
	CmdId   string   `protobuf:"bytes,4,opt,name=cmd_id,json=cmdId,proto3" json:"cmd_id,omitempty"` // 消息ID
	CtxId   string   `protobuf:"bytes,5,opt,name=ctx_id,json=ctxId,proto3" json:"ctx_id,omitempty"` // 执行上下文ID
	Stdin   string   `protobuf:"bytes,6,opt,name=stdin,proto3" json:"stdin,omitempty"`              // 执行脚本的标准输入
	Timeout int32    `protobuf:"varint,7,opt,name=timeout,proto3" json:"timeout,omitempty"`         // 执行脚本的超时时间，单位秒
	Cancel  bool     `protobuf:"varint,8,opt,name=cancel,proto3" json:"cancel,omitempty"`           // 是否取消执行
}

func (x *SSHExecParam) Reset() {
	*x = SSHExecParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_monit_monit_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SSHExecParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSHExecParam) ProtoMessage() {}

func (x *SSHExecParam) ProtoReflect() protoreflect.Message {
	mi := &file_v1_monit_monit_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSHExecParam.ProtoReflect.Descriptor instead.
func (*SSHExecParam) Descriptor() ([]byte, []int) {
	return file_v1_monit_monit_proto_rawDescGZIP(), []int{1}
}

func (x *SSHExecParam) GetMachine() *Machine {
	if x != nil {
		return x.Machine
	}
	return nil
}

func (x *SSHExecParam) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *SSHExecParam) GetCwd() string {
	if x != nil {
		return x.Cwd
	}
	return ""
}

func (x *SSHExecParam) GetCmdId() string {
	if x != nil {
		return x.CmdId
	}
	return ""
}

func (x *SSHExecParam) GetCtxId() string {
	if x != nil {
		return x.CtxId
	}
	return ""
}

func (x *SSHExecParam) GetStdin() string {
	if x != nil {
		return x.Stdin
	}
	return ""
}

func (x *SSHExecParam) GetTimeout() int32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *SSHExecParam) GetCancel() bool {
	if x != nil {
		return x.Cancel
	}
	return false
}

type SSHExecResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CmdId  string         `protobuf:"bytes,1,opt,name=cmd_id,json=cmdId,proto3" json:"cmd_id,omitempty"` // 消息ID
	CtxId  string         `protobuf:"bytes,2,opt,name=ctx_id,json=ctxId,proto3" json:"ctx_id,omitempty"` // 执行上下文ID
	Status base.RunStatus `protobuf:"varint,3,opt,name=status,proto3,enum=meta.v1.base.RunStatus" json:"status,omitempty"`
	Log    *base.Log      `protobuf:"bytes,4,opt,name=log,proto3" json:"log,omitempty"`
}

func (x *SSHExecResponse) Reset() {
	*x = SSHExecResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_monit_monit_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SSHExecResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSHExecResponse) ProtoMessage() {}

func (x *SSHExecResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_monit_monit_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSHExecResponse.ProtoReflect.Descriptor instead.
func (*SSHExecResponse) Descriptor() ([]byte, []int) {
	return file_v1_monit_monit_proto_rawDescGZIP(), []int{2}
}

func (x *SSHExecResponse) GetCmdId() string {
	if x != nil {
		return x.CmdId
	}
	return ""
}

func (x *SSHExecResponse) GetCtxId() string {
	if x != nil {
		return x.CtxId
	}
	return ""
}

func (x *SSHExecResponse) GetStatus() base.RunStatus {
	if x != nil {
		return x.Status
	}
	return base.RunStatus(0)
}

func (x *SSHExecResponse) GetLog() *base.Log {
	if x != nil {
		return x.Log
	}
	return nil
}

// 执行套件
type SuiteFuncParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rid       string `protobuf:"bytes,1,opt,name=rid,proto3" json:"rid,omitempty"`
	SuiteFunc string `protobuf:"bytes,2,opt,name=suite_func,json=suiteFunc,proto3" json:"suite_func,omitempty"`
	Param     string `protobuf:"bytes,3,opt,name=param,proto3" json:"param,omitempty"`
}

func (x *SuiteFuncParams) Reset() {
	*x = SuiteFuncParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_monit_monit_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuiteFuncParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuiteFuncParams) ProtoMessage() {}

func (x *SuiteFuncParams) ProtoReflect() protoreflect.Message {
	mi := &file_v1_monit_monit_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuiteFuncParams.ProtoReflect.Descriptor instead.
func (*SuiteFuncParams) Descriptor() ([]byte, []int) {
	return file_v1_monit_monit_proto_rawDescGZIP(), []int{3}
}

func (x *SuiteFuncParams) GetRid() string {
	if x != nil {
		return x.Rid
	}
	return ""
}

func (x *SuiteFuncParams) GetSuiteFunc() string {
	if x != nil {
		return x.SuiteFunc
	}
	return ""
}

func (x *SuiteFuncParams) GetParam() string {
	if x != nil {
		return x.Param
	}
	return ""
}

type SuiteRun struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dir       string             `protobuf:"bytes,1,opt,name=dir,proto3" json:"dir,omitempty"`
	SuiteCode string             `protobuf:"bytes,2,opt,name=suite_code,json=suiteCode,proto3" json:"suite_code,omitempty"`
	Version   string             `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Filename  string             `protobuf:"bytes,4,opt,name=filename,proto3" json:"filename,omitempty"`
	Cmd       string             `protobuf:"bytes,5,opt,name=cmd,proto3" json:"cmd,omitempty"`
	Conf      *base.JsonString   `protobuf:"bytes,6,opt,name=conf,proto3" json:"conf,omitempty"`
	Funcs     []*SuiteFuncParams `protobuf:"bytes,7,rep,name=funcs,proto3" json:"funcs,omitempty"`
}

func (x *SuiteRun) Reset() {
	*x = SuiteRun{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_monit_monit_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuiteRun) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuiteRun) ProtoMessage() {}

func (x *SuiteRun) ProtoReflect() protoreflect.Message {
	mi := &file_v1_monit_monit_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuiteRun.ProtoReflect.Descriptor instead.
func (*SuiteRun) Descriptor() ([]byte, []int) {
	return file_v1_monit_monit_proto_rawDescGZIP(), []int{4}
}

func (x *SuiteRun) GetDir() string {
	if x != nil {
		return x.Dir
	}
	return ""
}

func (x *SuiteRun) GetSuiteCode() string {
	if x != nil {
		return x.SuiteCode
	}
	return ""
}

func (x *SuiteRun) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *SuiteRun) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *SuiteRun) GetCmd() string {
	if x != nil {
		return x.Cmd
	}
	return ""
}

func (x *SuiteRun) GetConf() *base.JsonString {
	if x != nil {
		return x.Conf
	}
	return nil
}

func (x *SuiteRun) GetFuncs() []*SuiteFuncParams {
	if x != nil {
		return x.Funcs
	}
	return nil
}

type SuiteRunResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status base.RunStatus   `protobuf:"varint,1,opt,name=status,proto3,enum=meta.v1.base.RunStatus" json:"status,omitempty"`
	Log    *base.Log        `protobuf:"bytes,2,opt,name=log,proto3" json:"log,omitempty"`
	Rid    string           `protobuf:"bytes,3,opt,name=rid,proto3" json:"rid,omitempty"`
	Res    *base.JsonString `protobuf:"bytes,4,opt,name=res,proto3" json:"res,omitempty"`
}

func (x *SuiteRunResponse) Reset() {
	*x = SuiteRunResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_monit_monit_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuiteRunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuiteRunResponse) ProtoMessage() {}

func (x *SuiteRunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_monit_monit_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuiteRunResponse.ProtoReflect.Descriptor instead.
func (*SuiteRunResponse) Descriptor() ([]byte, []int) {
	return file_v1_monit_monit_proto_rawDescGZIP(), []int{5}
}

func (x *SuiteRunResponse) GetStatus() base.RunStatus {
	if x != nil {
		return x.Status
	}
	return base.RunStatus(0)
}

func (x *SuiteRunResponse) GetLog() *base.Log {
	if x != nil {
		return x.Log
	}
	return nil
}

func (x *SuiteRunResponse) GetRid() string {
	if x != nil {
		return x.Rid
	}
	return ""
}

func (x *SuiteRunResponse) GetRes() *base.JsonString {
	if x != nil {
		return x.Res
	}
	return nil
}

// 安装证书
type CertInstall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cert string `protobuf:"bytes,1,opt,name=cert,proto3" json:"cert,omitempty"`
}

func (x *CertInstall) Reset() {
	*x = CertInstall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_monit_monit_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CertInstall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CertInstall) ProtoMessage() {}

func (x *CertInstall) ProtoReflect() protoreflect.Message {
	mi := &file_v1_monit_monit_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CertInstall.ProtoReflect.Descriptor instead.
func (*CertInstall) Descriptor() ([]byte, []int) {
	return file_v1_monit_monit_proto_rawDescGZIP(), []int{6}
}

func (x *CertInstall) GetCert() string {
	if x != nil {
		return x.Cert
	}
	return ""
}

// 机器状态
type Stats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Machine   *Machine `protobuf:"bytes,1,opt,name=machine,proto3" json:"machine,omitempty"`
	Timestamp int64    `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Monit     *Monit   `protobuf:"bytes,3,opt,name=monit,proto3" json:"monit,omitempty"`
}

func (x *Stats) Reset() {
	*x = Stats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_monit_monit_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stats) ProtoMessage() {}

func (x *Stats) ProtoReflect() protoreflect.Message {
	mi := &file_v1_monit_monit_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stats.ProtoReflect.Descriptor instead.
func (*Stats) Descriptor() ([]byte, []int) {
	return file_v1_monit_monit_proto_rawDescGZIP(), []int{7}
}

func (x *Stats) GetMachine() *Machine {
	if x != nil {
		return x.Machine
	}
	return nil
}

func (x *Stats) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Stats) GetMonit() *Monit {
	if x != nil {
		return x.Monit
	}
	return nil
}

type Monit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CpuTotal   int64      `protobuf:"varint,1,opt,name=cpu_total,json=cpuTotal,proto3" json:"cpu_total,omitempty"`
	CpuPercent float64    `protobuf:"fixed64,2,opt,name=cpu_percent,json=cpuPercent,proto3" json:"cpu_percent,omitempty"`
	MemTotal   int64      `protobuf:"varint,3,opt,name=mem_total,json=memTotal,proto3" json:"mem_total,omitempty"`
	MemUsed    int64      `protobuf:"varint,4,opt,name=mem_used,json=memUsed,proto3" json:"mem_used,omitempty"`
	MemPercent float64    `protobuf:"fixed64,5,opt,name=mem_percent,json=memPercent,proto3" json:"mem_percent,omitempty"`
	NetIn      int64      `protobuf:"varint,6,opt,name=net_in,json=netIn,proto3" json:"net_in,omitempty"`
	NetOut     int64      `protobuf:"varint,7,opt,name=net_out,json=netOut,proto3" json:"net_out,omitempty"`
	IpIn       string     `protobuf:"bytes,8,opt,name=ip_in,json=ipIn,proto3" json:"ip_in,omitempty"`
	IpOut      string     `protobuf:"bytes,9,opt,name=ip_out,json=ipOut,proto3" json:"ip_out,omitempty"`
	BootTime   string     `protobuf:"bytes,10,opt,name=boot_time,json=bootTime,proto3" json:"boot_time,omitempty"`
	IsDocker   bool       `protobuf:"varint,11,opt,name=is_docker,json=isDocker,proto3" json:"is_docker,omitempty"`
	Disks      []*Disk    `protobuf:"bytes,12,rep,name=disks,proto3" json:"disks,omitempty"`
	Processes  []*Process `protobuf:"bytes,13,rep,name=processes,proto3" json:"processes,omitempty"`
	Dockers    []*Docker  `protobuf:"bytes,14,rep,name=dockers,proto3" json:"dockers,omitempty"`
}

func (x *Monit) Reset() {
	*x = Monit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_monit_monit_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Monit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Monit) ProtoMessage() {}

func (x *Monit) ProtoReflect() protoreflect.Message {
	mi := &file_v1_monit_monit_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Monit.ProtoReflect.Descriptor instead.
func (*Monit) Descriptor() ([]byte, []int) {
	return file_v1_monit_monit_proto_rawDescGZIP(), []int{8}
}

func (x *Monit) GetCpuTotal() int64 {
	if x != nil {
		return x.CpuTotal
	}
	return 0
}

func (x *Monit) GetCpuPercent() float64 {
	if x != nil {
		return x.CpuPercent
	}
	return 0
}

func (x *Monit) GetMemTotal() int64 {
	if x != nil {
		return x.MemTotal
	}
	return 0
}

func (x *Monit) GetMemUsed() int64 {
	if x != nil {
		return x.MemUsed
	}
	return 0
}

func (x *Monit) GetMemPercent() float64 {
	if x != nil {
		return x.MemPercent
	}
	return 0
}

func (x *Monit) GetNetIn() int64 {
	if x != nil {
		return x.NetIn
	}
	return 0
}

func (x *Monit) GetNetOut() int64 {
	if x != nil {
		return x.NetOut
	}
	return 0
}

func (x *Monit) GetIpIn() string {
	if x != nil {
		return x.IpIn
	}
	return ""
}

func (x *Monit) GetIpOut() string {
	if x != nil {
		return x.IpOut
	}
	return ""
}

func (x *Monit) GetBootTime() string {
	if x != nil {
		return x.BootTime
	}
	return ""
}

func (x *Monit) GetIsDocker() bool {
	if x != nil {
		return x.IsDocker
	}
	return false
}

func (x *Monit) GetDisks() []*Disk {
	if x != nil {
		return x.Disks
	}
	return nil
}

func (x *Monit) GetProcesses() []*Process {
	if x != nil {
		return x.Processes
	}
	return nil
}

func (x *Monit) GetDockers() []*Docker {
	if x != nil {
		return x.Dockers
	}
	return nil
}

type Disk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Device  string  `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
	Path    string  `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Total   int64   `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	Used    int64   `protobuf:"varint,4,opt,name=used,proto3" json:"used,omitempty"`
	Percent float64 `protobuf:"fixed64,5,opt,name=percent,proto3" json:"percent,omitempty"`
}

func (x *Disk) Reset() {
	*x = Disk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_monit_monit_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Disk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Disk) ProtoMessage() {}

func (x *Disk) ProtoReflect() protoreflect.Message {
	mi := &file_v1_monit_monit_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Disk.ProtoReflect.Descriptor instead.
func (*Disk) Descriptor() ([]byte, []int) {
	return file_v1_monit_monit_proto_rawDescGZIP(), []int{9}
}

func (x *Disk) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *Disk) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Disk) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *Disk) GetUsed() int64 {
	if x != nil {
		return x.Used
	}
	return 0
}

func (x *Disk) GetPercent() float64 {
	if x != nil {
		return x.Percent
	}
	return 0
}

type Process struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pid        int64   `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	Name       string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CpuPercent float64 `protobuf:"fixed64,3,opt,name=cpu_percent,json=cpuPercent,proto3" json:"cpu_percent,omitempty"`
	MemPercent float64 `protobuf:"fixed64,4,opt,name=mem_percent,json=memPercent,proto3" json:"mem_percent,omitempty"`
}

func (x *Process) Reset() {
	*x = Process{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_monit_monit_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Process) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Process) ProtoMessage() {}

func (x *Process) ProtoReflect() protoreflect.Message {
	mi := &file_v1_monit_monit_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Process.ProtoReflect.Descriptor instead.
func (*Process) Descriptor() ([]byte, []int) {
	return file_v1_monit_monit_proto_rawDescGZIP(), []int{10}
}

func (x *Process) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *Process) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Process) GetCpuPercent() float64 {
	if x != nil {
		return x.CpuPercent
	}
	return 0
}

func (x *Process) GetMemPercent() float64 {
	if x != nil {
		return x.MemPercent
	}
	return 0
}

type Docker struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContainerId   string   `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	ContainerName string   `protobuf:"bytes,2,opt,name=container_name,json=containerName,proto3" json:"container_name,omitempty"`
	Image         string   `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	Command       string   `protobuf:"bytes,4,opt,name=command,proto3" json:"command,omitempty"`
	Created       int64    `protobuf:"varint,5,opt,name=created,proto3" json:"created,omitempty"`
	Ports         []string `protobuf:"bytes,6,rep,name=ports,proto3" json:"ports,omitempty"`
	Status        string   `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	State         string   `protobuf:"bytes,8,opt,name=state,proto3" json:"state,omitempty"`
	Network       string   `protobuf:"bytes,9,opt,name=network,proto3" json:"network,omitempty"`
	Ip            []string `protobuf:"bytes,10,rep,name=ip,proto3" json:"ip,omitempty"`
	Mounts        []string `protobuf:"bytes,11,rep,name=mounts,proto3" json:"mounts,omitempty"`
}

func (x *Docker) Reset() {
	*x = Docker{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_monit_monit_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Docker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Docker) ProtoMessage() {}

func (x *Docker) ProtoReflect() protoreflect.Message {
	mi := &file_v1_monit_monit_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Docker.ProtoReflect.Descriptor instead.
func (*Docker) Descriptor() ([]byte, []int) {
	return file_v1_monit_monit_proto_rawDescGZIP(), []int{11}
}

func (x *Docker) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *Docker) GetContainerName() string {
	if x != nil {
		return x.ContainerName
	}
	return ""
}

func (x *Docker) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Docker) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *Docker) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *Docker) GetPorts() []string {
	if x != nil {
		return x.Ports
	}
	return nil
}

func (x *Docker) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Docker) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Docker) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Docker) GetIp() []string {
	if x != nil {
		return x.Ip
	}
	return nil
}

func (x *Docker) GetMounts() []string {
	if x != nil {
		return x.Mounts
	}
	return nil
}

var File_v1_monit_monit_proto protoreflect.FileDescriptor

var file_v1_monit_monit_proto_rawDesc = []byte{
	0x0a, 0x14, 0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x2f, 0x6d, 0x6f, 0x6e, 0x69, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x1a, 0x12, 0x76, 0x31, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x6d,
	0x65, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x76, 0x31, 0x2f, 0x62, 0x61,
	0x73, 0x65, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x6c, 0x6f, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x4b, 0x0a, 0x07, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xe2,
	0x01, 0x0a, 0x0c, 0x53, 0x53, 0x48, 0x45, 0x78, 0x65, 0x63, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12,
	0x30, 0x0a, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74,
	0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63,
	0x77, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x77, 0x64, 0x12, 0x15, 0x0a,
	0x06, 0x63, 0x6d, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63,
	0x6d, 0x64, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x63, 0x74, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x74, 0x78, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x64, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x64, 0x69,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x63,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x63, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x22, 0x95, 0x01, 0x0a, 0x0f, 0x53, 0x53, 0x48, 0x45, 0x78, 0x65, 0x63, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x63, 0x6d, 0x64, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6d, 0x64, 0x49, 0x64, 0x12, 0x15,
	0x0a, 0x06, 0x63, 0x74, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x63, 0x74, 0x78, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x62, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x03, 0x6c, 0x6f, 0x67, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x52, 0x03, 0x6c, 0x6f, 0x67, 0x22, 0x58, 0x0a, 0x0f, 0x53,
	0x75, 0x69, 0x74, 0x65, 0x46, 0x75, 0x6e, 0x63, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x72, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x69, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x69, 0x74, 0x65, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x75, 0x69, 0x74, 0x65, 0x46, 0x75, 0x6e, 0x63, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x22, 0xe7, 0x01, 0x0a, 0x08, 0x53, 0x75, 0x69, 0x74, 0x65, 0x52,
	0x75, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x64, 0x69, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x69, 0x74, 0x65, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x75, 0x69, 0x74, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6d, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x2c, 0x0a, 0x04, 0x63,
	0x6f, 0x6e, 0x66, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x4a, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x52, 0x04, 0x63, 0x6f, 0x6e, 0x66, 0x12, 0x34, 0x0a, 0x05, 0x66, 0x75, 0x6e,
	0x63, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x2e, 0x53, 0x75, 0x69, 0x74, 0x65, 0x46, 0x75,
	0x6e, 0x63, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x05, 0x66, 0x75, 0x6e, 0x63, 0x73, 0x22,
	0xa6, 0x01, 0x0a, 0x10, 0x53, 0x75, 0x69, 0x74, 0x65, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x03, 0x6c, 0x6f, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x52, 0x03, 0x6c, 0x6f, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x03,
	0x72, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x4a, 0x73, 0x6f, 0x6e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x52, 0x03, 0x72, 0x65, 0x73, 0x22, 0x21, 0x0a, 0x0b, 0x43, 0x65, 0x72, 0x74,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x65, 0x72, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x65, 0x72, 0x74, 0x22, 0x83, 0x01, 0x0a, 0x05,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x30, 0x0a, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x07,
	0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2a, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x6d,
	0x6f, 0x6e, 0x69, 0x74, 0x2e, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x69,
	0x74, 0x22, 0xc6, 0x03, 0x0a, 0x05, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x70, 0x75, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x63, 0x70, 0x75, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x70, 0x75, 0x5f,
	0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x63,
	0x70, 0x75, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d,
	0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65,
	0x6d, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x5f, 0x75, 0x73,
	0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x55, 0x73, 0x65,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x50, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6e, 0x65, 0x74, 0x5f, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x6e, 0x65, 0x74, 0x49, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x65, 0x74,
	0x5f, 0x6f, 0x75, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6e, 0x65, 0x74, 0x4f,
	0x75, 0x74, 0x12, 0x13, 0x0a, 0x05, 0x69, 0x70, 0x5f, 0x69, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x69, 0x70, 0x49, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x70, 0x5f, 0x6f, 0x75,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x70, 0x4f, 0x75, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x62, 0x6f, 0x6f, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x62, 0x6f, 0x6f, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69,
	0x73, 0x5f, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x69, 0x73, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x05, 0x64, 0x69, 0x73, 0x6b,
	0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x2e, 0x44, 0x69, 0x73, 0x6b, 0x52, 0x05, 0x64, 0x69,
	0x73, 0x6b, 0x73, 0x12, 0x34, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x07, 0x64, 0x6f, 0x63,
	0x6b, 0x65, 0x72, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x2e, 0x44, 0x6f, 0x63, 0x6b, 0x65,
	0x72, 0x52, 0x07, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x73, 0x22, 0x76, 0x0a, 0x04, 0x44, 0x69,
	0x73, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x75, 0x73, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x22, 0x71, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x70, 0x75, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x63, 0x70, 0x75, 0x50, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x5f, 0x70, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x50, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x22, 0xa2, 0x02, 0x0a, 0x06, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x05, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x42, 0x20, 0x5a, 0x1e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x7a, 0x6a, 0x2d, 0x73, 0x68, 0x2f, 0x6d,
	0x65, 0x74, 0x61, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_monit_monit_proto_rawDescOnce sync.Once
	file_v1_monit_monit_proto_rawDescData = file_v1_monit_monit_proto_rawDesc
)

func file_v1_monit_monit_proto_rawDescGZIP() []byte {
	file_v1_monit_monit_proto_rawDescOnce.Do(func() {
		file_v1_monit_monit_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_monit_monit_proto_rawDescData)
	})
	return file_v1_monit_monit_proto_rawDescData
}

var file_v1_monit_monit_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_v1_monit_monit_proto_goTypes = []interface{}{
	(*Machine)(nil),          // 0: meta.v1.monit.Machine
	(*SSHExecParam)(nil),     // 1: meta.v1.monit.SSHExecParam
	(*SSHExecResponse)(nil),  // 2: meta.v1.monit.SSHExecResponse
	(*SuiteFuncParams)(nil),  // 3: meta.v1.monit.SuiteFuncParams
	(*SuiteRun)(nil),         // 4: meta.v1.monit.SuiteRun
	(*SuiteRunResponse)(nil), // 5: meta.v1.monit.SuiteRunResponse
	(*CertInstall)(nil),      // 6: meta.v1.monit.CertInstall
	(*Stats)(nil),            // 7: meta.v1.monit.Stats
	(*Monit)(nil),            // 8: meta.v1.monit.Monit
	(*Disk)(nil),             // 9: meta.v1.monit.Disk
	(*Process)(nil),          // 10: meta.v1.monit.Process
	(*Docker)(nil),           // 11: meta.v1.monit.Docker
	(base.RunStatus)(0),      // 12: meta.v1.base.RunStatus
	(*base.Log)(nil),         // 13: meta.v1.base.Log
	(*base.JsonString)(nil),  // 14: meta.v1.base.JsonString
}
var file_v1_monit_monit_proto_depIdxs = []int32{
	0,  // 0: meta.v1.monit.SSHExecParam.machine:type_name -> meta.v1.monit.Machine
	12, // 1: meta.v1.monit.SSHExecResponse.status:type_name -> meta.v1.base.RunStatus
	13, // 2: meta.v1.monit.SSHExecResponse.log:type_name -> meta.v1.base.Log
	14, // 3: meta.v1.monit.SuiteRun.conf:type_name -> meta.v1.base.JsonString
	3,  // 4: meta.v1.monit.SuiteRun.funcs:type_name -> meta.v1.monit.SuiteFuncParams
	12, // 5: meta.v1.monit.SuiteRunResponse.status:type_name -> meta.v1.base.RunStatus
	13, // 6: meta.v1.monit.SuiteRunResponse.log:type_name -> meta.v1.base.Log
	14, // 7: meta.v1.monit.SuiteRunResponse.res:type_name -> meta.v1.base.JsonString
	0,  // 8: meta.v1.monit.Stats.machine:type_name -> meta.v1.monit.Machine
	8,  // 9: meta.v1.monit.Stats.monit:type_name -> meta.v1.monit.Monit
	9,  // 10: meta.v1.monit.Monit.disks:type_name -> meta.v1.monit.Disk
	10, // 11: meta.v1.monit.Monit.processes:type_name -> meta.v1.monit.Process
	11, // 12: meta.v1.monit.Monit.dockers:type_name -> meta.v1.monit.Docker
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_v1_monit_monit_proto_init() }
func file_v1_monit_monit_proto_init() {
	if File_v1_monit_monit_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v1_monit_monit_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_monit_monit_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SSHExecParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_monit_monit_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SSHExecResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_monit_monit_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuiteFuncParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_monit_monit_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuiteRun); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_monit_monit_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuiteRunResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_monit_monit_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CertInstall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_monit_monit_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_monit_monit_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Monit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_monit_monit_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Disk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_monit_monit_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Process); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_monit_monit_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Docker); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_monit_monit_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_v1_monit_monit_proto_goTypes,
		DependencyIndexes: file_v1_monit_monit_proto_depIdxs,
		MessageInfos:      file_v1_monit_monit_proto_msgTypes,
	}.Build()
	File_v1_monit_monit_proto = out.File
	file_v1_monit_monit_proto_rawDesc = nil
	file_v1_monit_monit_proto_goTypes = nil
	file_v1_monit_monit_proto_depIdxs = nil
}
