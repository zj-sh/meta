// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v4.25.1
// source: v1/svrs/meta.proto

package svrs

import (
	envs "github.com/zj-sh/meta/v1/envs"
	pipe "github.com/zj-sh/meta/v1/pipe"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ServiceType int32

const (
	ServiceType_SERVICE_TYPE_UNKNOWN ServiceType = 0
	ServiceType_KUBERNETES           ServiceType = 1
	ServiceType_HELM                 ServiceType = 2
	ServiceType_DOCKER               ServiceType = 3
	ServiceType_MACHINE              ServiceType = 4
	ServiceType_OTHER                ServiceType = 99
)

// Enum value maps for ServiceType.
var (
	ServiceType_name = map[int32]string{
		0:  "SERVICE_TYPE_UNKNOWN",
		1:  "KUBERNETES",
		2:  "HELM",
		3:  "DOCKER",
		4:  "MACHINE",
		99: "OTHER",
	}
	ServiceType_value = map[string]int32{
		"SERVICE_TYPE_UNKNOWN": 0,
		"KUBERNETES":           1,
		"HELM":                 2,
		"DOCKER":               3,
		"MACHINE":              4,
		"OTHER":                99,
	}
)

func (x ServiceType) Enum() *ServiceType {
	p := new(ServiceType)
	*p = x
	return p
}

func (x ServiceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServiceType) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_svrs_meta_proto_enumTypes[0].Descriptor()
}

func (ServiceType) Type() protoreflect.EnumType {
	return &file_v1_svrs_meta_proto_enumTypes[0]
}

func (x ServiceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServiceType.Descriptor instead.
func (ServiceType) EnumDescriptor() ([]byte, []int) {
	return file_v1_svrs_meta_proto_rawDescGZIP(), []int{0}
}

type ActionType int32

const (
	ActionType_SERVICE_ACTION_TYPE_UNKNOWN ActionType = 0
	ActionType_DELETE_ENV                  ActionType = 1
)

// Enum value maps for ActionType.
var (
	ActionType_name = map[int32]string{
		0: "SERVICE_ACTION_TYPE_UNKNOWN",
		1: "DELETE_ENV",
	}
	ActionType_value = map[string]int32{
		"SERVICE_ACTION_TYPE_UNKNOWN": 0,
		"DELETE_ENV":                  1,
	}
)

func (x ActionType) Enum() *ActionType {
	p := new(ActionType)
	*p = x
	return p
}

func (x ActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_svrs_meta_proto_enumTypes[1].Descriptor()
}

func (ActionType) Type() protoreflect.EnumType {
	return &file_v1_svrs_meta_proto_enumTypes[1]
}

func (x ActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActionType.Descriptor instead.
func (ActionType) EnumDescriptor() ([]byte, []int) {
	return file_v1_svrs_meta_proto_rawDescGZIP(), []int{1}
}

type ServiceTypeOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value ServiceType `protobuf:"varint,1,opt,name=value,proto3,enum=meta.v1.svrs.ServiceType" json:"value,omitempty"`
	Label string      `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
}

func (x *ServiceTypeOption) Reset() {
	*x = ServiceTypeOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_svrs_meta_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceTypeOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceTypeOption) ProtoMessage() {}

func (x *ServiceTypeOption) ProtoReflect() protoreflect.Message {
	mi := &file_v1_svrs_meta_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceTypeOption.ProtoReflect.Descriptor instead.
func (*ServiceTypeOption) Descriptor() ([]byte, []int) {
	return file_v1_svrs_meta_proto_rawDescGZIP(), []int{0}
}

func (x *ServiceTypeOption) GetValue() ServiceType {
	if x != nil {
		return x.Value
	}
	return ServiceType_SERVICE_TYPE_UNKNOWN
}

func (x *ServiceTypeOption) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

type Service struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: json:"service_id" yaml:"-"
	ServiceId string `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id" yaml:"-"`
	// @gotags: json:"service_code" yaml:"service_code" binding:"required"
	ServiceCode string `protobuf:"bytes,2,opt,name=service_code,json=serviceCode,proto3" json:"service_code" yaml:"service_code" binding:"required"`
	// @gotags: json:"service_name" yaml:"service_name" binding:"required"
	ServiceName string `protobuf:"bytes,3,opt,name=service_name,json=serviceName,proto3" json:"service_name" yaml:"service_name" binding:"required"`
	// @gotags: json:"service_type" yaml:"service_type" binding:"required"
	ServiceType ServiceType `protobuf:"varint,4,opt,name=service_type,json=serviceType,proto3,enum=meta.v1.svrs.ServiceType" json:"service_type" yaml:"service_type" binding:"required"`
	// @gotags: json:"service_desc" yaml:"service_desc"
	ServiceDesc string `protobuf:"bytes,5,opt,name=service_desc,json=serviceDesc,proto3" json:"service_desc" yaml:"service_desc"`
	// @gotags: json:"project_id" yaml:"project_id" binding:"required"
	ProjectId string `protobuf:"bytes,6,opt,name=project_id,json=projectId,proto3" json:"project_id" yaml:"project_id" binding:"required"`
	// @gotags: json:"project_code" yaml:"project_code" binding:"required"
	ServiceSrcs []*ServiceSrc `protobuf:"bytes,7,rep,name=service_srcs,json=serviceSrcs,proto3" json:"project_code" yaml:"project_code" binding:"required"`
	// @gotags: json:"service_items" yaml:"service_items" binding:"required"
	ServiceItems []*ServiceItem `protobuf:"bytes,8,rep,name=service_items,json=serviceItems,proto3" json:"service_items" yaml:"service_items" binding:"required"`
	// @gotags: json:"service_variables" yaml:"service_variables" binding:"required"
	ServiceVariables []*pipe.Var `protobuf:"bytes,9,rep,name=service_variables,json=serviceVariables,proto3" json:"service_variables" yaml:"service_variables" binding:"required"`
	// @gotags: json:"service_envs" yaml:"service_envs" binding:"required"
	ServiceEnvs []*envs.Env `protobuf:"bytes,10,rep,name=service_envs,json=serviceEnvs,proto3" json:"service_envs" yaml:"service_envs" binding:"required"`
	// @gotags: json:"service_pipelines" yaml:"service_pipelines" binding:"required"
	ServicePipelines []*ServicePipeline `protobuf:"bytes,11,rep,name=service_pipelines,json=servicePipelines,proto3" json:"service_pipelines" yaml:"service_pipelines" binding:"required"`
	// @gotags: json:"actions" yaml:"-"
	Actions []*ServiceAction `protobuf:"bytes,12,rep,name=actions,proto3" json:"actions" yaml:"-"`
}

func (x *Service) Reset() {
	*x = Service{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_svrs_meta_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Service) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service) ProtoMessage() {}

func (x *Service) ProtoReflect() protoreflect.Message {
	mi := &file_v1_svrs_meta_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service.ProtoReflect.Descriptor instead.
func (*Service) Descriptor() ([]byte, []int) {
	return file_v1_svrs_meta_proto_rawDescGZIP(), []int{1}
}

func (x *Service) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *Service) GetServiceCode() string {
	if x != nil {
		return x.ServiceCode
	}
	return ""
}

func (x *Service) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *Service) GetServiceType() ServiceType {
	if x != nil {
		return x.ServiceType
	}
	return ServiceType_SERVICE_TYPE_UNKNOWN
}

func (x *Service) GetServiceDesc() string {
	if x != nil {
		return x.ServiceDesc
	}
	return ""
}

func (x *Service) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *Service) GetServiceSrcs() []*ServiceSrc {
	if x != nil {
		return x.ServiceSrcs
	}
	return nil
}

func (x *Service) GetServiceItems() []*ServiceItem {
	if x != nil {
		return x.ServiceItems
	}
	return nil
}

func (x *Service) GetServiceVariables() []*pipe.Var {
	if x != nil {
		return x.ServiceVariables
	}
	return nil
}

func (x *Service) GetServiceEnvs() []*envs.Env {
	if x != nil {
		return x.ServiceEnvs
	}
	return nil
}

func (x *Service) GetServicePipelines() []*ServicePipeline {
	if x != nil {
		return x.ServicePipelines
	}
	return nil
}

func (x *Service) GetActions() []*ServiceAction {
	if x != nil {
		return x.Actions
	}
	return nil
}

type ServiceSrc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: json:"key" yaml:"key"
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key" yaml:"key"`
	// @gotags: json:"title" yaml:"title"
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title" yaml:"title"`
	// @gotags: json:"isRoot" yaml:"isRoot"
	IsRoot bool `protobuf:"varint,3,opt,name=isRoot,proto3" json:"isRoot" yaml:"isRoot"`
	// @gotags: json:"isLeaf" yaml:"isLeaf"
	IsLeaf bool `protobuf:"varint,4,opt,name=isLeaf,proto3" json:"isLeaf" yaml:"isLeaf"`
	// @gotags: json:"isImport" yaml:"isImport"
	IsImport bool `protobuf:"varint,5,opt,name=isImport,proto3" json:"isImport" yaml:"isImport"`
	// @gotags: json:"code" yaml:"code"
	Code string `protobuf:"bytes,6,opt,name=code,proto3" json:"code" yaml:"code"`
	// @gotags: json:"children" yaml:"children"
	Children []*ServiceSrc `protobuf:"bytes,7,rep,name=children,proto3" json:"children" yaml:"children"`
}

func (x *ServiceSrc) Reset() {
	*x = ServiceSrc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_svrs_meta_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceSrc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceSrc) ProtoMessage() {}

func (x *ServiceSrc) ProtoReflect() protoreflect.Message {
	mi := &file_v1_svrs_meta_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceSrc.ProtoReflect.Descriptor instead.
func (*ServiceSrc) Descriptor() ([]byte, []int) {
	return file_v1_svrs_meta_proto_rawDescGZIP(), []int{2}
}

func (x *ServiceSrc) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ServiceSrc) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ServiceSrc) GetIsRoot() bool {
	if x != nil {
		return x.IsRoot
	}
	return false
}

func (x *ServiceSrc) GetIsLeaf() bool {
	if x != nil {
		return x.IsLeaf
	}
	return false
}

func (x *ServiceSrc) GetIsImport() bool {
	if x != nil {
		return x.IsImport
	}
	return false
}

func (x *ServiceSrc) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ServiceSrc) GetChildren() []*ServiceSrc {
	if x != nil {
		return x.Children
	}
	return nil
}

type ServiceItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: json:"name" yaml:"name"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name" yaml:"name"`
	// @gotags: json:"image" yaml:"image"
	Image string `protobuf:"bytes,2,opt,name=image,proto3" json:"image" yaml:"image"`
	// @gotags: json:"file" yaml:"file"
	File string `protobuf:"bytes,3,opt,name=file,proto3" json:"file" yaml:"file"`
	// @gotags: json:"allow_build" yaml:"allow_build"
	AllowBuild bool `protobuf:"varint,4,opt,name=allow_build,json=allowBuild,proto3" json:"allow_build" yaml:"allow_build"`
	// @gotags: json:"envs" yaml:"envs"
	Envs []*envs.Env `protobuf:"bytes,5,rep,name=envs,proto3" json:"envs" yaml:"envs"`
}

func (x *ServiceItem) Reset() {
	*x = ServiceItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_svrs_meta_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceItem) ProtoMessage() {}

func (x *ServiceItem) ProtoReflect() protoreflect.Message {
	mi := &file_v1_svrs_meta_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceItem.ProtoReflect.Descriptor instead.
func (*ServiceItem) Descriptor() ([]byte, []int) {
	return file_v1_svrs_meta_proto_rawDescGZIP(), []int{3}
}

func (x *ServiceItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ServiceItem) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *ServiceItem) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

func (x *ServiceItem) GetAllowBuild() bool {
	if x != nil {
		return x.AllowBuild
	}
	return false
}

func (x *ServiceItem) GetEnvs() []*envs.Env {
	if x != nil {
		return x.Envs
	}
	return nil
}

type ServicePipeline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string                `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Image        string                `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	AllowBuild   bool                  `protobuf:"varint,3,opt,name=allow_build,json=allowBuild,proto3" json:"allow_build,omitempty"`
	PipelineId   string                `protobuf:"bytes,4,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"`
	PipelineName string                `protobuf:"bytes,5,opt,name=pipeline_name,json=pipelineName,proto3" json:"pipeline_name,omitempty"`
	EnvCodes     []string              `protobuf:"bytes,6,rep,name=env_codes,json=envCodes,proto3" json:"env_codes,omitempty"`
	Src          map[string]*anypb.Any `protobuf:"bytes,7,rep,name=src,proto3" json:"src,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Count        int32                 `protobuf:"varint,8,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ServicePipeline) Reset() {
	*x = ServicePipeline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_svrs_meta_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServicePipeline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServicePipeline) ProtoMessage() {}

func (x *ServicePipeline) ProtoReflect() protoreflect.Message {
	mi := &file_v1_svrs_meta_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServicePipeline.ProtoReflect.Descriptor instead.
func (*ServicePipeline) Descriptor() ([]byte, []int) {
	return file_v1_svrs_meta_proto_rawDescGZIP(), []int{4}
}

func (x *ServicePipeline) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ServicePipeline) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *ServicePipeline) GetAllowBuild() bool {
	if x != nil {
		return x.AllowBuild
	}
	return false
}

func (x *ServicePipeline) GetPipelineId() string {
	if x != nil {
		return x.PipelineId
	}
	return ""
}

func (x *ServicePipeline) GetPipelineName() string {
	if x != nil {
		return x.PipelineName
	}
	return ""
}

func (x *ServicePipeline) GetEnvCodes() []string {
	if x != nil {
		return x.EnvCodes
	}
	return nil
}

func (x *ServicePipeline) GetSrc() map[string]*anypb.Any {
	if x != nil {
		return x.Src
	}
	return nil
}

func (x *ServicePipeline) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ServiceAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action         ActionType `protobuf:"varint,1,opt,name=action,proto3,enum=meta.v1.svrs.ActionType" json:"action,omitempty"`
	EnvId          string     `protobuf:"bytes,2,opt,name=env_id,json=envId,proto3" json:"env_id,omitempty"`
	IsDelNamespace bool       `protobuf:"varint,3,opt,name=is_del_namespace,json=isDelNamespace,proto3" json:"is_del_namespace,omitempty"`
}

func (x *ServiceAction) Reset() {
	*x = ServiceAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_svrs_meta_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceAction) ProtoMessage() {}

func (x *ServiceAction) ProtoReflect() protoreflect.Message {
	mi := &file_v1_svrs_meta_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceAction.ProtoReflect.Descriptor instead.
func (*ServiceAction) Descriptor() ([]byte, []int) {
	return file_v1_svrs_meta_proto_rawDescGZIP(), []int{5}
}

func (x *ServiceAction) GetAction() ActionType {
	if x != nil {
		return x.Action
	}
	return ActionType_SERVICE_ACTION_TYPE_UNKNOWN
}

func (x *ServiceAction) GetEnvId() string {
	if x != nil {
		return x.EnvId
	}
	return ""
}

func (x *ServiceAction) GetIsDelNamespace() bool {
	if x != nil {
		return x.IsDelNamespace
	}
	return false
}

var File_v1_svrs_meta_proto protoreflect.FileDescriptor

var file_v1_svrs_meta_proto_rawDesc = []byte{
	0x0a, 0x12, 0x76, 0x31, 0x2f, 0x73, 0x76, 0x72, 0x73, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x76,
	0x72, 0x73, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x76,
	0x31, 0x2f, 0x70, 0x69, 0x70, 0x65, 0x2f, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f,
	0x76, 0x61, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x76, 0x31, 0x2f, 0x65,
	0x6e, 0x76, 0x73, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5a,
	0x0a, 0x11, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x19, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x76, 0x72,
	0x73, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0xe4, 0x04, 0x0a, 0x07, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x0c, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x19, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x76, 0x72, 0x73,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x0c, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x72, 0x63, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x76, 0x72, 0x73,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x72, 0x63, 0x52, 0x0b, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x53, 0x72, 0x63, 0x73, 0x12, 0x3e, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x76, 0x72, 0x73, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x3e, 0x0a, 0x11, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x09, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x69,
	0x70, 0x65, 0x2e, 0x56, 0x61, 0x72, 0x52, 0x10, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x56,
	0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x65, 0x6e, 0x76, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x6e, 0x76, 0x73, 0x2e, 0x45, 0x6e,
	0x76, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x76, 0x73, 0x12, 0x4a,
	0x0a, 0x11, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x73, 0x76, 0x72, 0x73, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x10, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x07, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x76, 0x72, 0x73, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0xca, 0x01, 0x0a, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x72, 0x63,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x52, 0x6f,
	0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x52, 0x6f, 0x6f, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x4c, 0x65, 0x61, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x69, 0x73, 0x4c, 0x65, 0x61, 0x66, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x49, 0x6d,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x49, 0x6d,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x34, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c,
	0x64, 0x72, 0x65, 0x6e, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x76, 0x72, 0x73, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x53, 0x72, 0x63, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0x93,
	0x01, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x25, 0x0a,
	0x04, 0x65, 0x6e, 0x76, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x65, 0x6e, 0x76, 0x73, 0x2e, 0x45, 0x6e, 0x76, 0x52, 0x04,
	0x65, 0x6e, 0x76, 0x73, 0x22, 0xdd, 0x02, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x76,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e,
	0x76, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x03, 0x73, 0x72, 0x63, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x76,
	0x72, 0x73, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x2e, 0x53, 0x72, 0x63, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x73, 0x72, 0x63,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x4c, 0x0a, 0x08, 0x53, 0x72, 0x63, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x82, 0x01, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x73, 0x76, 0x72, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x65, 0x6e, 0x76, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6e, 0x76, 0x49, 0x64, 0x12,
	0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x44, 0x65, 0x6c,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2a, 0x65, 0x0a, 0x0b, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x45, 0x52, 0x56,
	0x49, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x4b, 0x55, 0x42, 0x45, 0x52, 0x4e, 0x45, 0x54, 0x45, 0x53,
	0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x45, 0x4c, 0x4d, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06,
	0x44, 0x4f, 0x43, 0x4b, 0x45, 0x52, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x41, 0x43, 0x48,
	0x49, 0x4e, 0x45, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x10, 0x63,
	0x2a, 0x3d, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f,
	0x0a, 0x1b, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12,
	0x0e, 0x0a, 0x0a, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x45, 0x4e, 0x56, 0x10, 0x01, 0x42,
	0x1f, 0x5a, 0x1d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x7a, 0x6a,
	0x2d, 0x73, 0x68, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x76, 0x72, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_svrs_meta_proto_rawDescOnce sync.Once
	file_v1_svrs_meta_proto_rawDescData = file_v1_svrs_meta_proto_rawDesc
)

func file_v1_svrs_meta_proto_rawDescGZIP() []byte {
	file_v1_svrs_meta_proto_rawDescOnce.Do(func() {
		file_v1_svrs_meta_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_svrs_meta_proto_rawDescData)
	})
	return file_v1_svrs_meta_proto_rawDescData
}

var file_v1_svrs_meta_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_v1_svrs_meta_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_v1_svrs_meta_proto_goTypes = []interface{}{
	(ServiceType)(0),          // 0: meta.v1.svrs.ServiceType
	(ActionType)(0),           // 1: meta.v1.svrs.ActionType
	(*ServiceTypeOption)(nil), // 2: meta.v1.svrs.ServiceTypeOption
	(*Service)(nil),           // 3: meta.v1.svrs.Service
	(*ServiceSrc)(nil),        // 4: meta.v1.svrs.ServiceSrc
	(*ServiceItem)(nil),       // 5: meta.v1.svrs.ServiceItem
	(*ServicePipeline)(nil),   // 6: meta.v1.svrs.ServicePipeline
	(*ServiceAction)(nil),     // 7: meta.v1.svrs.ServiceAction
	nil,                       // 8: meta.v1.svrs.ServicePipeline.SrcEntry
	(*pipe.Var)(nil),          // 9: meta.v1.pipe.Var
	(*envs.Env)(nil),          // 10: meta.v1.envs.Env
	(*anypb.Any)(nil),         // 11: google.protobuf.Any
}
var file_v1_svrs_meta_proto_depIdxs = []int32{
	0,  // 0: meta.v1.svrs.ServiceTypeOption.value:type_name -> meta.v1.svrs.ServiceType
	0,  // 1: meta.v1.svrs.Service.service_type:type_name -> meta.v1.svrs.ServiceType
	4,  // 2: meta.v1.svrs.Service.service_srcs:type_name -> meta.v1.svrs.ServiceSrc
	5,  // 3: meta.v1.svrs.Service.service_items:type_name -> meta.v1.svrs.ServiceItem
	9,  // 4: meta.v1.svrs.Service.service_variables:type_name -> meta.v1.pipe.Var
	10, // 5: meta.v1.svrs.Service.service_envs:type_name -> meta.v1.envs.Env
	6,  // 6: meta.v1.svrs.Service.service_pipelines:type_name -> meta.v1.svrs.ServicePipeline
	7,  // 7: meta.v1.svrs.Service.actions:type_name -> meta.v1.svrs.ServiceAction
	4,  // 8: meta.v1.svrs.ServiceSrc.children:type_name -> meta.v1.svrs.ServiceSrc
	10, // 9: meta.v1.svrs.ServiceItem.envs:type_name -> meta.v1.envs.Env
	8,  // 10: meta.v1.svrs.ServicePipeline.src:type_name -> meta.v1.svrs.ServicePipeline.SrcEntry
	1,  // 11: meta.v1.svrs.ServiceAction.action:type_name -> meta.v1.svrs.ActionType
	11, // 12: meta.v1.svrs.ServicePipeline.SrcEntry.value:type_name -> google.protobuf.Any
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_v1_svrs_meta_proto_init() }
func file_v1_svrs_meta_proto_init() {
	if File_v1_svrs_meta_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v1_svrs_meta_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceTypeOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_svrs_meta_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Service); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_svrs_meta_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceSrc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_svrs_meta_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_svrs_meta_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServicePipeline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_svrs_meta_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_svrs_meta_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_v1_svrs_meta_proto_goTypes,
		DependencyIndexes: file_v1_svrs_meta_proto_depIdxs,
		EnumInfos:         file_v1_svrs_meta_proto_enumTypes,
		MessageInfos:      file_v1_svrs_meta_proto_msgTypes,
	}.Build()
	File_v1_svrs_meta_proto = out.File
	file_v1_svrs_meta_proto_rawDesc = nil
	file_v1_svrs_meta_proto_goTypes = nil
	file_v1_svrs_meta_proto_depIdxs = nil
}
