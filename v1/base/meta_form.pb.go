// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v4.25.1
// source: v1/base/meta_form.proto

package base

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FormFieldType int32

const (
	FormFieldType_FIELD_TYPE_UNKNOWN      FormFieldType = 0
	FormFieldType_FIELD_ALERT             FormFieldType = 101 // 告警
	FormFieldType_FIELD_INPUT             FormFieldType = 102 // 输入框
	FormFieldType_FIELD_TEXT              FormFieldType = 103 // 文本框
	FormFieldType_FIELD_PWD               FormFieldType = 104 // 密码框
	FormFieldType_FIELD_SELECT            FormFieldType = 105 // 下拉框
	FormFieldType_FIELD_SWITCH            FormFieldType = 106 // 开关
	FormFieldType_FIELD_CODE              FormFieldType = 107 // 代码编辑器
	FormFieldType_FIELD_DATE              FormFieldType = 108 // 日期选择器
	FormFieldType_FIELD_TIME              FormFieldType = 109 // 时间选择器
	FormFieldType_FIELD_DATES             FormFieldType = 110 // 日期范围选择器
	FormFieldType_FIELD_TIMES             FormFieldType = 111 // 时间范围选择器
	FormFieldType_FIELD_NUMBER            FormFieldType = 112 // 数字输入框
	FormFieldType_FIELD_SRC_AUTH_TYPE     FormFieldType = 201 // 代码仓库授权认证方式
	FormFieldType_FIELD_SRC_AUTH_USER     FormFieldType = 202 // 代码仓库授权用户
	FormFieldType_FIELD_SRC_REPO          FormFieldType = 203 // 源代码仓库
	FormFieldType_FIELD_SRC_BRANCH        FormFieldType = 204 // 源代码分支
	FormFieldType_FIELD_SRC_TAG           FormFieldType = 205 // 源代码标签
	FormFieldType_FIELD_BUILD_TYPES       FormFieldType = 301 // 构建类型
	FormFieldType_FIELD_BUILD_IMAGE       FormFieldType = 302 // 构建镜像
	FormFieldType_FIELD_BUILD_VERSION     FormFieldType = 303 // 构建版本
	FormFieldType_FIELD_BUILD_IMAGE_REPO  FormFieldType = 304 // 镜像仓库
	FormFieldType_FIELD_BUILD_MACHINE     FormFieldType = 305 // 镜像主机
	FormFieldType_FIELD_CORE_USER         FormFieldType = 800 // 选择用户
	FormFieldType_FIELD_CORE_ROLE         FormFieldType = 801 // 选择角色
	FormFieldType_FIELD_CORE_ORG          FormFieldType = 802 // 选择组织
	FormFieldType_FIELD_CORE_CORP         FormFieldType = 803 // 选择企业
	FormFieldType_FIELD_CORE_PROJECT      FormFieldType = 804 // 选择项目
	FormFieldType_FIELD_SUITE             FormFieldType = 900 // 套件, 需要指定入参job_effect
	FormFieldType_FIELD_SUITE_API_OPTIONS FormFieldType = 901 // 套件API选项
)

// Enum value maps for FormFieldType.
var (
	FormFieldType_name = map[int32]string{
		0:   "FIELD_TYPE_UNKNOWN",
		101: "FIELD_ALERT",
		102: "FIELD_INPUT",
		103: "FIELD_TEXT",
		104: "FIELD_PWD",
		105: "FIELD_SELECT",
		106: "FIELD_SWITCH",
		107: "FIELD_CODE",
		108: "FIELD_DATE",
		109: "FIELD_TIME",
		110: "FIELD_DATES",
		111: "FIELD_TIMES",
		112: "FIELD_NUMBER",
		201: "FIELD_SRC_AUTH_TYPE",
		202: "FIELD_SRC_AUTH_USER",
		203: "FIELD_SRC_REPO",
		204: "FIELD_SRC_BRANCH",
		205: "FIELD_SRC_TAG",
		301: "FIELD_BUILD_TYPES",
		302: "FIELD_BUILD_IMAGE",
		303: "FIELD_BUILD_VERSION",
		304: "FIELD_BUILD_IMAGE_REPO",
		305: "FIELD_BUILD_MACHINE",
		800: "FIELD_CORE_USER",
		801: "FIELD_CORE_ROLE",
		802: "FIELD_CORE_ORG",
		803: "FIELD_CORE_CORP",
		804: "FIELD_CORE_PROJECT",
		900: "FIELD_SUITE",
		901: "FIELD_SUITE_API_OPTIONS",
	}
	FormFieldType_value = map[string]int32{
		"FIELD_TYPE_UNKNOWN":      0,
		"FIELD_ALERT":             101,
		"FIELD_INPUT":             102,
		"FIELD_TEXT":              103,
		"FIELD_PWD":               104,
		"FIELD_SELECT":            105,
		"FIELD_SWITCH":            106,
		"FIELD_CODE":              107,
		"FIELD_DATE":              108,
		"FIELD_TIME":              109,
		"FIELD_DATES":             110,
		"FIELD_TIMES":             111,
		"FIELD_NUMBER":            112,
		"FIELD_SRC_AUTH_TYPE":     201,
		"FIELD_SRC_AUTH_USER":     202,
		"FIELD_SRC_REPO":          203,
		"FIELD_SRC_BRANCH":        204,
		"FIELD_SRC_TAG":           205,
		"FIELD_BUILD_TYPES":       301,
		"FIELD_BUILD_IMAGE":       302,
		"FIELD_BUILD_VERSION":     303,
		"FIELD_BUILD_IMAGE_REPO":  304,
		"FIELD_BUILD_MACHINE":     305,
		"FIELD_CORE_USER":         800,
		"FIELD_CORE_ROLE":         801,
		"FIELD_CORE_ORG":          802,
		"FIELD_CORE_CORP":         803,
		"FIELD_CORE_PROJECT":      804,
		"FIELD_SUITE":             900,
		"FIELD_SUITE_API_OPTIONS": 901,
	}
)

func (x FormFieldType) Enum() *FormFieldType {
	p := new(FormFieldType)
	*p = x
	return p
}

func (x FormFieldType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FormFieldType) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_base_meta_form_proto_enumTypes[0].Descriptor()
}

func (FormFieldType) Type() protoreflect.EnumType {
	return &file_v1_base_meta_form_proto_enumTypes[0]
}

func (x FormFieldType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FormFieldType.Descriptor instead.
func (FormFieldType) EnumDescriptor() ([]byte, []int) {
	return file_v1_base_meta_form_proto_rawDescGZIP(), []int{0}
}

type FieldList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields []*Field `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *FieldList) Reset() {
	*x = FieldList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_base_meta_form_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldList) ProtoMessage() {}

func (x *FieldList) ProtoReflect() protoreflect.Message {
	mi := &file_v1_base_meta_form_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldList.ProtoReflect.Descriptor instead.
func (*FieldList) Descriptor() ([]byte, []int) {
	return file_v1_base_meta_form_proto_rawDescGZIP(), []int{0}
}

func (x *FieldList) GetFields() []*Field {
	if x != nil {
		return x.Fields
	}
	return nil
}

type Field struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label             string         `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`                                // 字段名称
	Field             string         `protobuf:"bytes,2,opt,name=field,proto3" json:"field,omitempty"`                                // 字段键
	DefValue          string         `protobuf:"bytes,3,opt,name=defValue,proto3" json:"defValue,omitempty"`                          // 默认值
	Tooltip           string         `protobuf:"bytes,4,opt,name=tooltip,proto3" json:"tooltip,omitempty"`                            // 字段提示
	Type              FormFieldType  `protobuf:"varint,5,opt,name=type,proto3,enum=meta.v1.base.FormFieldType" json:"type,omitempty"` // 字段类型
	CodeLang          string         `protobuf:"bytes,6,opt,name=codeLang,proto3" json:"codeLang,omitempty"`                          // 代码语言
	CodeTemplate      int32          `protobuf:"varint,7,opt,name=codeTemplate,proto3" json:"codeTemplate,omitempty"`                 // 代码模板 2dockerfile 3yaml 4xml 5json 6shell 7ini,
	Span              int32          `protobuf:"varint,8,opt,name=span,proto3" json:"span,omitempty"`                                 // 字段宽度,24是一整行，等比换算
	Required          bool           `protobuf:"varint,9,opt,name=required,proto3" json:"required,omitempty"`                         // 是否必填（仅对201以后的类型有效，之前的请写rule）
	AllowVariable     bool           `protobuf:"varint,10,opt,name=allowVariable,proto3" json:"allowVariable,omitempty"`              // 是否允许变量
	Multivalued       []string       `protobuf:"bytes,11,rep,name=multivalued,proto3" json:"multivalued,omitempty"`                   // 多值
	Depend            []*FieldDepend `protobuf:"bytes,12,rep,name=depend,proto3" json:"depend,omitempty"`                             // 依赖，单项内的规则是或，多项内的规则是与
	Options           []*Option      `protobuf:"bytes,13,rep,name=options,proto3" json:"options,omitempty"`                           // 选项
	Params            []string       `protobuf:"bytes,14,rep,name=params,proto3" json:"params,omitempty"`                             // 参数，如果是动态字段，给定key，如果是常量，格式为 'key=value', 如 'job_effect=1'
	Rules             []*FieldRule   `protobuf:"bytes,15,rep,name=rules,proto3" json:"rules,omitempty"`                               // 校验规则
	Multiple          bool           `protobuf:"varint,16,opt,name=multiple,proto3" json:"multiple,omitempty"`                        // 是否多选，仅对选项类型有效(105 || >=201)
	Group             string         `protobuf:"bytes,17,opt,name=group,proto3" json:"group,omitempty"`                               // 字段分组,详情参考SuiteFieldConfig
	SuiteApiQueryName string         `protobuf:"bytes,18,opt,name=suiteApiQueryName,proto3" json:"suiteApiQueryName,omitempty"`       // 套件API配置
}

func (x *Field) Reset() {
	*x = Field{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_base_meta_form_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Field) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Field) ProtoMessage() {}

func (x *Field) ProtoReflect() protoreflect.Message {
	mi := &file_v1_base_meta_form_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Field.ProtoReflect.Descriptor instead.
func (*Field) Descriptor() ([]byte, []int) {
	return file_v1_base_meta_form_proto_rawDescGZIP(), []int{1}
}

func (x *Field) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *Field) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *Field) GetDefValue() string {
	if x != nil {
		return x.DefValue
	}
	return ""
}

func (x *Field) GetTooltip() string {
	if x != nil {
		return x.Tooltip
	}
	return ""
}

func (x *Field) GetType() FormFieldType {
	if x != nil {
		return x.Type
	}
	return FormFieldType_FIELD_TYPE_UNKNOWN
}

func (x *Field) GetCodeLang() string {
	if x != nil {
		return x.CodeLang
	}
	return ""
}

func (x *Field) GetCodeTemplate() int32 {
	if x != nil {
		return x.CodeTemplate
	}
	return 0
}

func (x *Field) GetSpan() int32 {
	if x != nil {
		return x.Span
	}
	return 0
}

func (x *Field) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *Field) GetAllowVariable() bool {
	if x != nil {
		return x.AllowVariable
	}
	return false
}

func (x *Field) GetMultivalued() []string {
	if x != nil {
		return x.Multivalued
	}
	return nil
}

func (x *Field) GetDepend() []*FieldDepend {
	if x != nil {
		return x.Depend
	}
	return nil
}

func (x *Field) GetOptions() []*Option {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *Field) GetParams() []string {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *Field) GetRules() []*FieldRule {
	if x != nil {
		return x.Rules
	}
	return nil
}

func (x *Field) GetMultiple() bool {
	if x != nil {
		return x.Multiple
	}
	return false
}

func (x *Field) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *Field) GetSuiteApiQueryName() string {
	if x != nil {
		return x.SuiteApiQueryName
	}
	return ""
}

type FieldDepend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field   string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`     // 依赖此字段值满足以下某条件才显示
	Equal   string `protobuf:"bytes,2,opt,name=equal,proto3" json:"equal,omitempty"`     // 等于某值
	NoEqual string `protobuf:"bytes,3,opt,name=noEqual,proto3" json:"noEqual,omitempty"` // 不等于某值
	After   bool   `protobuf:"varint,4,opt,name=after,proto3" json:"after,omitempty"`    // 在field字段有值之后才显示
}

func (x *FieldDepend) Reset() {
	*x = FieldDepend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_base_meta_form_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldDepend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldDepend) ProtoMessage() {}

func (x *FieldDepend) ProtoReflect() protoreflect.Message {
	mi := &file_v1_base_meta_form_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldDepend.ProtoReflect.Descriptor instead.
func (*FieldDepend) Descriptor() ([]byte, []int) {
	return file_v1_base_meta_form_proto_rawDescGZIP(), []int{2}
}

func (x *FieldDepend) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *FieldDepend) GetEqual() string {
	if x != nil {
		return x.Equal
	}
	return ""
}

func (x *FieldDepend) GetNoEqual() string {
	if x != nil {
		return x.NoEqual
	}
	return ""
}

func (x *FieldDepend) GetAfter() bool {
	if x != nil {
		return x.After
	}
	return false
}

type FieldRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`            // 校验类型,支持string/number/boolean/array/object/email/url/ip
	Required  bool   `protobuf:"varint,2,opt,name=required,proto3" json:"required,omitempty"`   // 是否必填
	Message   string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`      // 校验失败提示
	MinLength int32  `protobuf:"varint,4,opt,name=minLength,proto3" json:"minLength,omitempty"` // 最小长度，当type为string, array时有效
	MaxLength int32  `protobuf:"varint,5,opt,name=maxLength,proto3" json:"maxLength,omitempty"` // 最大长度，当type为string, array时有效
	Match     string `protobuf:"bytes,6,opt,name=match,proto3" json:"match,omitempty"`          // 正则表达式，当type为string时有效
	Min       int32  `protobuf:"varint,7,opt,name=min,proto3" json:"min,omitempty"`             // 最小值，当type为number时有效
	Max       int32  `protobuf:"varint,8,opt,name=max,proto3" json:"max,omitempty"`             // 最大值，当type为number时有效
}

func (x *FieldRule) Reset() {
	*x = FieldRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_base_meta_form_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldRule) ProtoMessage() {}

func (x *FieldRule) ProtoReflect() protoreflect.Message {
	mi := &file_v1_base_meta_form_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldRule.ProtoReflect.Descriptor instead.
func (*FieldRule) Descriptor() ([]byte, []int) {
	return file_v1_base_meta_form_proto_rawDescGZIP(), []int{3}
}

func (x *FieldRule) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *FieldRule) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *FieldRule) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *FieldRule) GetMinLength() int32 {
	if x != nil {
		return x.MinLength
	}
	return 0
}

func (x *FieldRule) GetMaxLength() int32 {
	if x != nil {
		return x.MaxLength
	}
	return 0
}

func (x *FieldRule) GetMatch() string {
	if x != nil {
		return x.Match
	}
	return ""
}

func (x *FieldRule) GetMin() int32 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *FieldRule) GetMax() int32 {
	if x != nil {
		return x.Max
	}
	return 0
}

// 通用字段列表
type LabelFieldList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*LabelField `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *LabelFieldList) Reset() {
	*x = LabelFieldList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_base_meta_form_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LabelFieldList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelFieldList) ProtoMessage() {}

func (x *LabelFieldList) ProtoReflect() protoreflect.Message {
	mi := &file_v1_base_meta_form_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelFieldList.ProtoReflect.Descriptor instead.
func (*LabelFieldList) Descriptor() ([]byte, []int) {
	return file_v1_base_meta_form_proto_rawDescGZIP(), []int{4}
}

func (x *LabelFieldList) GetList() []*LabelField {
	if x != nil {
		return x.List
	}
	return nil
}

type LabelField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label string `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	Field string `protobuf:"bytes,2,opt,name=field,proto3" json:"field,omitempty"`
}

func (x *LabelField) Reset() {
	*x = LabelField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_base_meta_form_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LabelField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelField) ProtoMessage() {}

func (x *LabelField) ProtoReflect() protoreflect.Message {
	mi := &file_v1_base_meta_form_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelField.ProtoReflect.Descriptor instead.
func (*LabelField) Descriptor() ([]byte, []int) {
	return file_v1_base_meta_form_proto_rawDescGZIP(), []int{5}
}

func (x *LabelField) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *LabelField) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

var File_v1_base_meta_form_proto protoreflect.FileDescriptor

var file_v1_base_meta_form_proto_rawDesc = []byte{
	0x0a, 0x17, 0x76, 0x31, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x6d, 0x65, 0x74, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x1a, 0x12, 0x76, 0x31, 0x2f, 0x62, 0x61, 0x73, 0x65,
	0x2f, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x38, 0x0a, 0x09, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x06, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0xdc, 0x04, 0x0a, 0x05, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x65, 0x66, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x65, 0x66, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x6f, 0x6f, 0x6c, 0x74,
	0x69, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x6f, 0x6c, 0x74, 0x69,
	0x70, 0x12, 0x2f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1b, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x46,
	0x6f, 0x72, 0x6d, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x64, 0x65, 0x4c, 0x61, 0x6e, 0x67, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x64, 0x65, 0x4c, 0x61, 0x6e, 0x67, 0x12, 0x22,
	0x0a, 0x0c, 0x63, 0x6f, 0x64, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6f, 0x64, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x70, 0x61, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x73, 0x70, 0x61, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x56, 0x61, 0x72, 0x69, 0x61,
	0x62, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x77,
	0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x75, 0x6c, 0x74,
	0x69, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x6d,
	0x75, 0x6c, 0x74, 0x69, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x64, 0x12, 0x31, 0x0a, 0x06, 0x64, 0x65,
	0x70, 0x65, 0x6e, 0x64, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x44,
	0x65, 0x70, 0x65, 0x6e, 0x64, 0x52, 0x06, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x12, 0x2e, 0x0a,
	0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x2d, 0x0a, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x0f,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x05, 0x72,
	0x75, 0x6c, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x75, 0x69, 0x74, 0x65, 0x41,
	0x70, 0x69, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x73, 0x75, 0x69, 0x74, 0x65, 0x41, 0x70, 0x69, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x69, 0x0a, 0x0b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x44, 0x65, 0x70,
	0x65, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x71, 0x75,
	0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x71, 0x75, 0x61, 0x6c, 0x12,
	0x18, 0x0a, 0x07, 0x6e, 0x6f, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6e, 0x6f, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x66, 0x74,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x22,
	0xcb, 0x01, 0x0a, 0x09, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x4c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x4c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x4c, 0x65, 0x6e, 0x67,
	0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x4c, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x6e,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6d, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x61, 0x78, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x22, 0x3e, 0x0a,
	0x0e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x2c, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x38, 0x0a,
	0x0a, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2a, 0x85, 0x05, 0x0a, 0x0d, 0x46, 0x6f, 0x72, 0x6d,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x46, 0x49, 0x45,
	0x4c, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10,
	0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x41, 0x4c, 0x45, 0x52, 0x54,
	0x10, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55,
	0x54, 0x10, 0x66, 0x12, 0x0e, 0x0a, 0x0a, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x54, 0x45, 0x58,
	0x54, 0x10, 0x67, 0x12, 0x0d, 0x0a, 0x09, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x50, 0x57, 0x44,
	0x10, 0x68, 0x12, 0x10, 0x0a, 0x0c, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x53, 0x45, 0x4c, 0x45,
	0x43, 0x54, 0x10, 0x69, 0x12, 0x10, 0x0a, 0x0c, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x53, 0x57,
	0x49, 0x54, 0x43, 0x48, 0x10, 0x6a, 0x12, 0x0e, 0x0a, 0x0a, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f,
	0x43, 0x4f, 0x44, 0x45, 0x10, 0x6b, 0x12, 0x0e, 0x0a, 0x0a, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f,
	0x44, 0x41, 0x54, 0x45, 0x10, 0x6c, 0x12, 0x0e, 0x0a, 0x0a, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f,
	0x54, 0x49, 0x4d, 0x45, 0x10, 0x6d, 0x12, 0x0f, 0x0a, 0x0b, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f,
	0x44, 0x41, 0x54, 0x45, 0x53, 0x10, 0x6e, 0x12, 0x0f, 0x0a, 0x0b, 0x46, 0x49, 0x45, 0x4c, 0x44,
	0x5f, 0x54, 0x49, 0x4d, 0x45, 0x53, 0x10, 0x6f, 0x12, 0x10, 0x0a, 0x0c, 0x46, 0x49, 0x45, 0x4c,
	0x44, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x10, 0x70, 0x12, 0x18, 0x0a, 0x13, 0x46, 0x49,
	0x45, 0x4c, 0x44, 0x5f, 0x53, 0x52, 0x43, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x10, 0xc9, 0x01, 0x12, 0x18, 0x0a, 0x13, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x53, 0x52,
	0x43, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x10, 0xca, 0x01, 0x12, 0x13,
	0x0a, 0x0e, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x53, 0x52, 0x43, 0x5f, 0x52, 0x45, 0x50, 0x4f,
	0x10, 0xcb, 0x01, 0x12, 0x15, 0x0a, 0x10, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x53, 0x52, 0x43,
	0x5f, 0x42, 0x52, 0x41, 0x4e, 0x43, 0x48, 0x10, 0xcc, 0x01, 0x12, 0x12, 0x0a, 0x0d, 0x46, 0x49,
	0x45, 0x4c, 0x44, 0x5f, 0x53, 0x52, 0x43, 0x5f, 0x54, 0x41, 0x47, 0x10, 0xcd, 0x01, 0x12, 0x16,
	0x0a, 0x11, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x53, 0x10, 0xad, 0x02, 0x12, 0x16, 0x0a, 0x11, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f,
	0x42, 0x55, 0x49, 0x4c, 0x44, 0x5f, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x10, 0xae, 0x02, 0x12, 0x18,
	0x0a, 0x13, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x5f, 0x56, 0x45,
	0x52, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0xaf, 0x02, 0x12, 0x1b, 0x0a, 0x16, 0x46, 0x49, 0x45, 0x4c,
	0x44, 0x5f, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x5f, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x5f, 0x52, 0x45,
	0x50, 0x4f, 0x10, 0xb0, 0x02, 0x12, 0x18, 0x0a, 0x13, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x42,
	0x55, 0x49, 0x4c, 0x44, 0x5f, 0x4d, 0x41, 0x43, 0x48, 0x49, 0x4e, 0x45, 0x10, 0xb1, 0x02, 0x12,
	0x14, 0x0a, 0x0f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x43, 0x4f, 0x52, 0x45, 0x5f, 0x55, 0x53,
	0x45, 0x52, 0x10, 0xa0, 0x06, 0x12, 0x14, 0x0a, 0x0f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x43,
	0x4f, 0x52, 0x45, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x10, 0xa1, 0x06, 0x12, 0x13, 0x0a, 0x0e, 0x46,
	0x49, 0x45, 0x4c, 0x44, 0x5f, 0x43, 0x4f, 0x52, 0x45, 0x5f, 0x4f, 0x52, 0x47, 0x10, 0xa2, 0x06,
	0x12, 0x14, 0x0a, 0x0f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x43, 0x4f, 0x52, 0x45, 0x5f, 0x43,
	0x4f, 0x52, 0x50, 0x10, 0xa3, 0x06, 0x12, 0x17, 0x0a, 0x12, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f,
	0x43, 0x4f, 0x52, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x4a, 0x45, 0x43, 0x54, 0x10, 0xa4, 0x06, 0x12,
	0x10, 0x0a, 0x0b, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x53, 0x55, 0x49, 0x54, 0x45, 0x10, 0x84,
	0x07, 0x12, 0x1c, 0x0a, 0x17, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x53, 0x55, 0x49, 0x54, 0x45,
	0x5f, 0x41, 0x50, 0x49, 0x5f, 0x4f, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x53, 0x10, 0x85, 0x07, 0x42,
	0x1f, 0x5a, 0x1d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x7a, 0x6a,
	0x2d, 0x73, 0x68, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x61, 0x73, 0x65,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_base_meta_form_proto_rawDescOnce sync.Once
	file_v1_base_meta_form_proto_rawDescData = file_v1_base_meta_form_proto_rawDesc
)

func file_v1_base_meta_form_proto_rawDescGZIP() []byte {
	file_v1_base_meta_form_proto_rawDescOnce.Do(func() {
		file_v1_base_meta_form_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_base_meta_form_proto_rawDescData)
	})
	return file_v1_base_meta_form_proto_rawDescData
}

var file_v1_base_meta_form_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_v1_base_meta_form_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_v1_base_meta_form_proto_goTypes = []interface{}{
	(FormFieldType)(0),     // 0: meta.v1.base.FormFieldType
	(*FieldList)(nil),      // 1: meta.v1.base.FieldList
	(*Field)(nil),          // 2: meta.v1.base.Field
	(*FieldDepend)(nil),    // 3: meta.v1.base.FieldDepend
	(*FieldRule)(nil),      // 4: meta.v1.base.FieldRule
	(*LabelFieldList)(nil), // 5: meta.v1.base.LabelFieldList
	(*LabelField)(nil),     // 6: meta.v1.base.LabelField
	(*Option)(nil),         // 7: meta.v1.base.Option
}
var file_v1_base_meta_form_proto_depIdxs = []int32{
	2, // 0: meta.v1.base.FieldList.fields:type_name -> meta.v1.base.Field
	0, // 1: meta.v1.base.Field.type:type_name -> meta.v1.base.FormFieldType
	3, // 2: meta.v1.base.Field.depend:type_name -> meta.v1.base.FieldDepend
	7, // 3: meta.v1.base.Field.options:type_name -> meta.v1.base.Option
	4, // 4: meta.v1.base.Field.rules:type_name -> meta.v1.base.FieldRule
	6, // 5: meta.v1.base.LabelFieldList.list:type_name -> meta.v1.base.LabelField
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_v1_base_meta_form_proto_init() }
func file_v1_base_meta_form_proto_init() {
	if File_v1_base_meta_form_proto != nil {
		return
	}
	file_v1_base_meta_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_v1_base_meta_form_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_base_meta_form_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Field); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_base_meta_form_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldDepend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_base_meta_form_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_base_meta_form_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LabelFieldList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_base_meta_form_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LabelField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_base_meta_form_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_v1_base_meta_form_proto_goTypes,
		DependencyIndexes: file_v1_base_meta_form_proto_depIdxs,
		EnumInfos:         file_v1_base_meta_form_proto_enumTypes,
		MessageInfos:      file_v1_base_meta_form_proto_msgTypes,
	}.Build()
	File_v1_base_meta_form_proto = out.File
	file_v1_base_meta_form_proto_rawDesc = nil
	file_v1_base_meta_form_proto_goTypes = nil
	file_v1_base_meta_form_proto_depIdxs = nil
}
