// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v4.25.1
// source: v1/pipe/meta_pipe.proto

package pipe

import (
	base "github.com/zj-sh/meta/v1/base"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 功能类别
type JobAttrib int32

const (
	JobAttrib_ATTRIB_UNKNOWN  JobAttrib = 0
	JobAttrib_ATTRIB_PLATFORM JobAttrib = 1 // 平台功能套件
	JobAttrib_ATTRIB_PIPELINE JobAttrib = 2 // 流水线功能套件
)

// Enum value maps for JobAttrib.
var (
	JobAttrib_name = map[int32]string{
		0: "ATTRIB_UNKNOWN",
		1: "ATTRIB_PLATFORM",
		2: "ATTRIB_PIPELINE",
	}
	JobAttrib_value = map[string]int32{
		"ATTRIB_UNKNOWN":  0,
		"ATTRIB_PLATFORM": 1,
		"ATTRIB_PIPELINE": 2,
	}
)

func (x JobAttrib) Enum() *JobAttrib {
	p := new(JobAttrib)
	*p = x
	return p
}

func (x JobAttrib) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JobAttrib) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_pipe_meta_pipe_proto_enumTypes[0].Descriptor()
}

func (JobAttrib) Type() protoreflect.EnumType {
	return &file_v1_pipe_meta_pipe_proto_enumTypes[0]
}

func (x JobAttrib) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JobAttrib.Descriptor instead.
func (JobAttrib) EnumDescriptor() ([]byte, []int) {
	return file_v1_pipe_meta_pipe_proto_rawDescGZIP(), []int{0}
}

// 任务功能
type JobEffect int32

const (
	JobEffect_EFFECT_UNKNOWN     JobEffect = 0
	JobEffect_EFFECT_SOURCE_PULL JobEffect = 1  // 源代码拉取
	JobEffect_EFFECT_SOURCE_AUTH JobEffect = 2  // 源代码认证
	JobEffect_EFFECT_SOURCE_SCAN JobEffect = 3  // 源代码校验
	JobEffect_EFFECT_CONFIG      JobEffect = 4  // 配置管理
	JobEffect_EFFECT_TEST        JobEffect = 5  // 测试
	JobEffect_EFFECT_BUILD       JobEffect = 6  // 构建
	JobEffect_EFFECT_IMAGE       JobEffect = 7  // 镜像
	JobEffect_EFFECT_DEPLOY      JobEffect = 8  // 部署
	JobEffect_EFFECT_DATA        JobEffect = 9  // 数据
	JobEffect_EFFECT_VERSION     JobEffect = 10 // 版本
	JobEffect_EFFECT_NOTIFY      JobEffect = 11 // 通知
	JobEffect_EFFECT_APPROVAL    JobEffect = 12 // 审批
	JobEffect_EFFECT_STORAGE     JobEffect = 13 // 存储
	JobEffect_EFFECT_PRODUCT     JobEffect = 14 // 制品
	JobEffect_EFFECT_SHELL       JobEffect = 15 // 脚本
	JobEffect_EFFECT_ISSUES      JobEffect = 16 // 协同
	JobEffect_EFFECT_ORG         JobEffect = 50 // 组织架构同步
	JobEffect_EFFECT_CUSTOM      JobEffect = 98 // 自定义
	JobEffect_EFFECT_PIPE        JobEffect = 99 // 流水线
)

// Enum value maps for JobEffect.
var (
	JobEffect_name = map[int32]string{
		0:  "EFFECT_UNKNOWN",
		1:  "EFFECT_SOURCE_PULL",
		2:  "EFFECT_SOURCE_AUTH",
		3:  "EFFECT_SOURCE_SCAN",
		4:  "EFFECT_CONFIG",
		5:  "EFFECT_TEST",
		6:  "EFFECT_BUILD",
		7:  "EFFECT_IMAGE",
		8:  "EFFECT_DEPLOY",
		9:  "EFFECT_DATA",
		10: "EFFECT_VERSION",
		11: "EFFECT_NOTIFY",
		12: "EFFECT_APPROVAL",
		13: "EFFECT_STORAGE",
		14: "EFFECT_PRODUCT",
		15: "EFFECT_SHELL",
		16: "EFFECT_ISSUES",
		50: "EFFECT_ORG",
		98: "EFFECT_CUSTOM",
		99: "EFFECT_PIPE",
	}
	JobEffect_value = map[string]int32{
		"EFFECT_UNKNOWN":     0,
		"EFFECT_SOURCE_PULL": 1,
		"EFFECT_SOURCE_AUTH": 2,
		"EFFECT_SOURCE_SCAN": 3,
		"EFFECT_CONFIG":      4,
		"EFFECT_TEST":        5,
		"EFFECT_BUILD":       6,
		"EFFECT_IMAGE":       7,
		"EFFECT_DEPLOY":      8,
		"EFFECT_DATA":        9,
		"EFFECT_VERSION":     10,
		"EFFECT_NOTIFY":      11,
		"EFFECT_APPROVAL":    12,
		"EFFECT_STORAGE":     13,
		"EFFECT_PRODUCT":     14,
		"EFFECT_SHELL":       15,
		"EFFECT_ISSUES":      16,
		"EFFECT_ORG":         50,
		"EFFECT_CUSTOM":      98,
		"EFFECT_PIPE":        99,
	}
)

func (x JobEffect) Enum() *JobEffect {
	p := new(JobEffect)
	*p = x
	return p
}

func (x JobEffect) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JobEffect) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_pipe_meta_pipe_proto_enumTypes[1].Descriptor()
}

func (JobEffect) Type() protoreflect.EnumType {
	return &file_v1_pipe_meta_pipe_proto_enumTypes[1]
}

func (x JobEffect) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JobEffect.Descriptor instead.
func (JobEffect) EnumDescriptor() ([]byte, []int) {
	return file_v1_pipe_meta_pipe_proto_rawDescGZIP(), []int{1}
}

type JobFields struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Params []*base.Field      `protobuf:"bytes,1,rep,name=params,proto3" json:"params,omitempty"`
	Outs   []*base.LabelField `protobuf:"bytes,2,rep,name=outs,proto3" json:"outs,omitempty"`
}

func (x *JobFields) Reset() {
	*x = JobFields{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_pipe_meta_pipe_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobFields) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobFields) ProtoMessage() {}

func (x *JobFields) ProtoReflect() protoreflect.Message {
	mi := &file_v1_pipe_meta_pipe_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobFields.ProtoReflect.Descriptor instead.
func (*JobFields) Descriptor() ([]byte, []int) {
	return file_v1_pipe_meta_pipe_proto_rawDescGZIP(), []int{0}
}

func (x *JobFields) GetParams() []*base.Field {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *JobFields) GetOuts() []*base.LabelField {
	if x != nil {
		return x.Outs
	}
	return nil
}

var File_v1_pipe_meta_pipe_proto protoreflect.FileDescriptor

var file_v1_pipe_meta_pipe_proto_rawDesc = []byte{
	0x0a, 0x17, 0x76, 0x31, 0x2f, 0x70, 0x69, 0x70, 0x65, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x70,
	0x69, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x6d, 0x65, 0x74, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x1a, 0x17, 0x76, 0x31, 0x2f, 0x62, 0x61, 0x73, 0x65,
	0x2f, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x66, 0x0a, 0x09, 0x4a, 0x6f, 0x62, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x2b, 0x0a,
	0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x2c, 0x0a, 0x04, 0x6f, 0x75,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x52, 0x04, 0x6f, 0x75, 0x74, 0x73, 0x2a, 0x49, 0x0a, 0x09, 0x4a, 0x6f, 0x62, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x12, 0x12, 0x0a, 0x0e, 0x41, 0x54, 0x54, 0x52, 0x49, 0x42, 0x5f,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x54, 0x54,
	0x52, 0x49, 0x42, 0x5f, 0x50, 0x4c, 0x41, 0x54, 0x46, 0x4f, 0x52, 0x4d, 0x10, 0x01, 0x12, 0x13,
	0x0a, 0x0f, 0x41, 0x54, 0x54, 0x52, 0x49, 0x42, 0x5f, 0x50, 0x49, 0x50, 0x45, 0x4c, 0x49, 0x4e,
	0x45, 0x10, 0x02, 0x2a, 0x90, 0x03, 0x0a, 0x09, 0x4a, 0x6f, 0x62, 0x45, 0x66, 0x66, 0x65, 0x63,
	0x74, 0x12, 0x12, 0x0a, 0x0e, 0x45, 0x46, 0x46, 0x45, 0x43, 0x54, 0x5f, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x46, 0x46, 0x45, 0x43, 0x54, 0x5f,
	0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x50, 0x55, 0x4c, 0x4c, 0x10, 0x01, 0x12, 0x16, 0x0a,
	0x12, 0x45, 0x46, 0x46, 0x45, 0x43, 0x54, 0x5f, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x41,
	0x55, 0x54, 0x48, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x46, 0x46, 0x45, 0x43, 0x54, 0x5f,
	0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x53, 0x43, 0x41, 0x4e, 0x10, 0x03, 0x12, 0x11, 0x0a,
	0x0d, 0x45, 0x46, 0x46, 0x45, 0x43, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10, 0x04,
	0x12, 0x0f, 0x0a, 0x0b, 0x45, 0x46, 0x46, 0x45, 0x43, 0x54, 0x5f, 0x54, 0x45, 0x53, 0x54, 0x10,
	0x05, 0x12, 0x10, 0x0a, 0x0c, 0x45, 0x46, 0x46, 0x45, 0x43, 0x54, 0x5f, 0x42, 0x55, 0x49, 0x4c,
	0x44, 0x10, 0x06, 0x12, 0x10, 0x0a, 0x0c, 0x45, 0x46, 0x46, 0x45, 0x43, 0x54, 0x5f, 0x49, 0x4d,
	0x41, 0x47, 0x45, 0x10, 0x07, 0x12, 0x11, 0x0a, 0x0d, 0x45, 0x46, 0x46, 0x45, 0x43, 0x54, 0x5f,
	0x44, 0x45, 0x50, 0x4c, 0x4f, 0x59, 0x10, 0x08, 0x12, 0x0f, 0x0a, 0x0b, 0x45, 0x46, 0x46, 0x45,
	0x43, 0x54, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x10, 0x09, 0x12, 0x12, 0x0a, 0x0e, 0x45, 0x46, 0x46,
	0x45, 0x43, 0x54, 0x5f, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x0a, 0x12, 0x11, 0x0a,
	0x0d, 0x45, 0x46, 0x46, 0x45, 0x43, 0x54, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59, 0x10, 0x0b,
	0x12, 0x13, 0x0a, 0x0f, 0x45, 0x46, 0x46, 0x45, 0x43, 0x54, 0x5f, 0x41, 0x50, 0x50, 0x52, 0x4f,
	0x56, 0x41, 0x4c, 0x10, 0x0c, 0x12, 0x12, 0x0a, 0x0e, 0x45, 0x46, 0x46, 0x45, 0x43, 0x54, 0x5f,
	0x53, 0x54, 0x4f, 0x52, 0x41, 0x47, 0x45, 0x10, 0x0d, 0x12, 0x12, 0x0a, 0x0e, 0x45, 0x46, 0x46,
	0x45, 0x43, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x10, 0x0e, 0x12, 0x10, 0x0a,
	0x0c, 0x45, 0x46, 0x46, 0x45, 0x43, 0x54, 0x5f, 0x53, 0x48, 0x45, 0x4c, 0x4c, 0x10, 0x0f, 0x12,
	0x11, 0x0a, 0x0d, 0x45, 0x46, 0x46, 0x45, 0x43, 0x54, 0x5f, 0x49, 0x53, 0x53, 0x55, 0x45, 0x53,
	0x10, 0x10, 0x12, 0x0e, 0x0a, 0x0a, 0x45, 0x46, 0x46, 0x45, 0x43, 0x54, 0x5f, 0x4f, 0x52, 0x47,
	0x10, 0x32, 0x12, 0x11, 0x0a, 0x0d, 0x45, 0x46, 0x46, 0x45, 0x43, 0x54, 0x5f, 0x43, 0x55, 0x53,
	0x54, 0x4f, 0x4d, 0x10, 0x62, 0x12, 0x0f, 0x0a, 0x0b, 0x45, 0x46, 0x46, 0x45, 0x43, 0x54, 0x5f,
	0x50, 0x49, 0x50, 0x45, 0x10, 0x63, 0x42, 0x1f, 0x5a, 0x1d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x7a, 0x6a, 0x2d, 0x73, 0x68, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x2f,
	0x76, 0x31, 0x2f, 0x70, 0x69, 0x70, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_pipe_meta_pipe_proto_rawDescOnce sync.Once
	file_v1_pipe_meta_pipe_proto_rawDescData = file_v1_pipe_meta_pipe_proto_rawDesc
)

func file_v1_pipe_meta_pipe_proto_rawDescGZIP() []byte {
	file_v1_pipe_meta_pipe_proto_rawDescOnce.Do(func() {
		file_v1_pipe_meta_pipe_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_pipe_meta_pipe_proto_rawDescData)
	})
	return file_v1_pipe_meta_pipe_proto_rawDescData
}

var file_v1_pipe_meta_pipe_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_v1_pipe_meta_pipe_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_v1_pipe_meta_pipe_proto_goTypes = []interface{}{
	(JobAttrib)(0),          // 0: meta.v1.pipe.JobAttrib
	(JobEffect)(0),          // 1: meta.v1.pipe.JobEffect
	(*JobFields)(nil),       // 2: meta.v1.pipe.JobFields
	(*base.Field)(nil),      // 3: meta.v1.base.Field
	(*base.LabelField)(nil), // 4: meta.v1.base.LabelField
}
var file_v1_pipe_meta_pipe_proto_depIdxs = []int32{
	3, // 0: meta.v1.pipe.JobFields.params:type_name -> meta.v1.base.Field
	4, // 1: meta.v1.pipe.JobFields.outs:type_name -> meta.v1.base.LabelField
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_v1_pipe_meta_pipe_proto_init() }
func file_v1_pipe_meta_pipe_proto_init() {
	if File_v1_pipe_meta_pipe_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v1_pipe_meta_pipe_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobFields); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_pipe_meta_pipe_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_v1_pipe_meta_pipe_proto_goTypes,
		DependencyIndexes: file_v1_pipe_meta_pipe_proto_depIdxs,
		EnumInfos:         file_v1_pipe_meta_pipe_proto_enumTypes,
		MessageInfos:      file_v1_pipe_meta_pipe_proto_msgTypes,
	}.Build()
	File_v1_pipe_meta_pipe_proto = out.File
	file_v1_pipe_meta_pipe_proto_rawDesc = nil
	file_v1_pipe_meta_pipe_proto_goTypes = nil
	file_v1_pipe_meta_pipe_proto_depIdxs = nil
}
